// <auto-generated />
using System;
using CafeMan_Project.Models.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeMan_Project.Models.Migrations
{
    [DbContext(typeof(CafemanDbContext))]
    [Migration("20240423124532_changetype-starToDouble")]
    partial class changetypestarToDouble
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Cafe", b =>
                {
                    b.Property<int>("CafeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CafeId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CafeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CafeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosingTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PriceRange")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Star")
                        .HasColumnType("float");

                    b.Property<int?>("Tel")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CafeId");

                    b.HasIndex("UserId");

                    b.ToTable("Cafes");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int>("CafeId")
                        .HasColumnType("int");

                    b.Property<string>("CommentByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("CafeId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Edibles", b =>
                {
                    b.Property<int>("EdiblesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EdiblesId"));

                    b.Property<int?>("CafeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDessert")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDrink")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFood")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("EdiblesId");

                    b.HasIndex("CafeId");

                    b.HasIndex("MenuId");

                    b.ToTable("Edibles");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<int>("CafeId")
                        .HasColumnType("int");

                    b.Property<int>("EdiblesId")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.HasIndex("CafeId")
                        .IsUnique();

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCafeOwner")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Cafe", b =>
                {
                    b.HasOne("CafeMan_Project.Models.Entities.User", "Users")
                        .WithMany("Cafes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Comment", b =>
                {
                    b.HasOne("CafeMan_Project.Models.Entities.Cafe", "Cafe")
                        .WithMany("Comments")
                        .HasForeignKey("CafeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CafeMan_Project.Models.Entities.User", null)
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Cafe");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Edibles", b =>
                {
                    b.HasOne("CafeMan_Project.Models.Entities.Cafe", null)
                        .WithMany("Edibles")
                        .HasForeignKey("CafeId");

                    b.HasOne("CafeMan_Project.Models.Entities.Menu", "Menu")
                        .WithMany("Edibles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Menu", b =>
                {
                    b.HasOne("CafeMan_Project.Models.Entities.Cafe", "Cafe")
                        .WithOne("Menu")
                        .HasForeignKey("CafeMan_Project.Models.Entities.Menu", "CafeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cafe");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Cafe", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Edibles");

                    b.Navigation("Menu")
                        .IsRequired();
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.Menu", b =>
                {
                    b.Navigation("Edibles");
                });

            modelBuilder.Entity("CafeMan_Project.Models.Entities.User", b =>
                {
                    b.Navigation("Cafes");

                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
